<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    <Style TargetType="DataGrid" x:Key="MainGrid">

        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="MinWidth" Value="1000"/>
        <Setter Property="Height" Value="700"/>
        <Setter Property="RowHeight" Value="50"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>

        <!-- Make the border and grid lines a little less imposing -->
        <Setter Property="BorderBrush" Value="#FFF1F1F1" />
        <Setter Property="HorizontalGridLinesBrush" Value="#FFF1F1F1" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FFDFF7E0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#FFBFDCD9" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#FFC9E0CB" />
                            <Setter Property="BorderBrush" Value="Black" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>


    <LinearGradientBrush x:Key="GreenGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="White"/>
        <GradientStop Offset="1" Color="#FFA2F7A2"/>
    </LinearGradientBrush>

    <Style TargetType="Button" >
        <Setter Property="Background" Value="{StaticResource GreenGradientBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootElement">
                        <Grid x:Name="mainButton"
                                Margin="0,0,1,1"
                                RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0.0" Y="0.0"/>
                                    <ScaleTransform ScaleX="1.0" ScaleY="1.0" />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <Rectangle x:Name="mainRect" Fill="{TemplateBinding Background}" RadiusX="6" RadiusY="6">
                            </Rectangle>


                            <ContentPresenter HorizontalAlignment="Center"
                             Margin="4,0,4,0"
                             Content="{TemplateBinding Content}"
                             VerticalAlignment="Center" />

                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="mainButton" Property="RenderTransform" >
                                <Setter.Value>
                                    <TransformGroup>
                                        <TranslateTransform X="0.0" Y="0.0"/>
                                        <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="mainButton" Property="RenderTransform" >
                                <Setter.Value>
                                    <TransformGroup>
                                        <TranslateTransform X="1" Y="1"/>
                                        <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>